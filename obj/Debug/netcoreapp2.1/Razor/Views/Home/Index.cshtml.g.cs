#pragma checksum "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "db43c5e98591e9652517f241b38ea2bfd13505b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\_ViewImports.cshtml"
using TodoList1.ViewModels;

#line default
#line hidden
#line 2 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\_ViewImports.cshtml"
using TodoList1.Models;

#line default
#line hidden
#line 3 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"db43c5e98591e9652517f241b38ea2bfd13505b5", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"349ce19e2a84a9e8fb44bdbbd0acdb09b809d61e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<TodoList1.ViewModels.HomeViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "DeleteItem", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CompleteItem", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btnDoneitem"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
  
    ViewBag.Title = "ToDo Tasks";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(132, 625, true);
            WriteLiteral(@"
<div class=""container"">
    <div class=""row"">
        <div class=""col-md-4"">
            <div class=""customDiv"">
                Recently Completed Tasks

                <div class=""table-responsive"">
                    <table class=""table table-bordered table-hover"">
                        <thead>
                            <tr class=""success"">
                                <th>Title</th>
                                <th>Description</th>
                                <th>Completed On</th>

                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 24 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                             foreach (var item in Model.LstRecentlyCompletedItems)
                            {

#line default
#line hidden
            BeginContext(872, 91, true);
            WriteLiteral("                                <tr class=\"info\">\r\n                                    <td>");
            EndContext();
            BeginContext(964, 10, false);
#line 27 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.Title);

#line default
#line hidden
            EndContext();
            BeginContext(974, 48, true);
            WriteLiteral(" </td>\r\n                                    <td>");
            EndContext();
            BeginContext(1023, 16, false);
#line 28 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.Description);

#line default
#line hidden
            EndContext();
            BeginContext(1039, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(1087, 36, false);
#line 29 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.DoneDate.ToString("dd/mm/yyyy"));

#line default
#line hidden
            EndContext();
            BeginContext(1123, 48, true);
            WriteLiteral("</td>\r\n\r\n                                </tr>\r\n");
            EndContext();
#line 32 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                            }

#line default
#line hidden
            BeginContext(1202, 737, true);
            WriteLiteral(@"
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""customDiv"">
                Non Completed Tasks
                <div class=""table-responsive"">
                    <table class=""table table-bordered table-hover"">
                        <thead>
                            <tr class=""success"">
                                <th>Title</th>
                                <th>Description</th>
                                <th>Due Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 53 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                             foreach (var item in Model.LstAllDueItems)
                            {
                                string btnCopyId = "btnCopy" + item.Id;

#line default
#line hidden
            BeginContext(2116, 183, true);
            WriteLiteral("                                <tr class=\"info\">\r\n                                    <td>\r\n                                        <a class=\"btn-copy-input input-group-prepend mr-1\"");
            EndContext();
            BeginWriteAttribute("id", " id=\"", 2299, "\"", 2314, 1);
#line 58 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
WriteAttributeValue("", 2304, btnCopyId, 2304, 10, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2315, 41, true);
            WriteLiteral(" data-title=\"Copy\" href=\"#\" role=\"button\"");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 2356, "\"", 2417, 7);
            WriteAttributeValue("", 2366, "copytoclipboard(event,", 2366, 22, true);
            WriteAttributeValue(" ", 2388, "\'", 2389, 2, true);
#line 58 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
WriteAttributeValue("", 2390, item.Title, 2390, 11, false);

#line default
#line hidden
            WriteAttributeValue("", 2401, "\',", 2401, 2, true);
            WriteAttributeValue(" ", 2403, "\'", 2404, 2, true);
#line 58 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
WriteAttributeValue("", 2405, btnCopyId, 2405, 10, false);

#line default
#line hidden
            WriteAttributeValue("", 2415, "\')", 2415, 2, true);
            EndWriteAttribute();
            BeginContext(2418, 210, true);
            WriteLiteral(" data-original-title=\"Copy\">\r\n                                            <img width=\"38\" src=\"/images/copy64.png\">\r\n                                        </a>\r\n                                        <span> ");
            EndContext();
            BeginContext(2629, 10, false);
#line 61 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                          Write(item.Title);

#line default
#line hidden
            EndContext();
            BeginContext(2639, 92, true);
            WriteLiteral("</span>\r\n                                    </td>\r\n                                    <td>");
            EndContext();
            BeginContext(2732, 16, false);
#line 63 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.Description);

#line default
#line hidden
            EndContext();
            BeginContext(2748, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(2796, 12, false);
#line 64 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.DueDate);

#line default
#line hidden
            EndContext();
            BeginContext(2808, 89, true);
            WriteLiteral("</td>\r\n                                    <td>\r\n                                        ");
            EndContext();
            BeginContext(2897, 127, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "74ac84c148a347cd8f1592d04d55f77f", async() => {
                BeginContext(3014, 6, true);
                WriteLiteral("Delete");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-id", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 67 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                             WriteLiteral(item.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-id", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["id"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3024, 84, true);
            WriteLiteral("\r\n                                    </td>\r\n                                </tr>\r\n");
            EndContext();
#line 70 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                            }

#line default
#line hidden
            BeginContext(3139, 727, true);
            WriteLiteral(@"
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class=""col-md-4"">
            <div class=""customDiv"">
                Due Tasks
                <div class=""table-responsive"">
                    <table class=""table table-bordered table-hover"">
                        <thead>
                            <tr class=""success"">
                                <th>Title</th>
                                <th>Description</th>
                                <th>Due Date</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
");
            EndContext();
#line 91 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                             foreach (var item in Model.LstDueItems)
                            {

#line default
#line hidden
            BeginContext(3967, 93, true);
            WriteLiteral("                                <tr class=\"active\">\r\n                                    <td>");
            EndContext();
            BeginContext(4061, 10, false);
#line 94 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.Title);

#line default
#line hidden
            EndContext();
            BeginContext(4071, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(4119, 16, false);
#line 95 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.Description);

#line default
#line hidden
            EndContext();
            BeginContext(4135, 47, true);
            WriteLiteral("</td>\r\n                                    <td>");
            EndContext();
            BeginContext(4183, 12, false);
#line 96 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                   Write(item.DueDate);

#line default
#line hidden
            EndContext();
            BeginContext(4195, 129, true);
            WriteLiteral("</td>\r\n                                    <td>\r\n                                      \r\n                                        ");
            EndContext();
            BeginContext(4324, 151, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0a4ea297581b4f7a8e5c79dc1d423458", async() => {
                BeginContext(4467, 4, true);
                WriteLiteral("Done");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            if (__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues == null)
            {
                throw new InvalidOperationException(InvalidTagHelperIndexerAssignment("asp-route-TaskId", "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper", "RouteValues"));
            }
            BeginWriteTagHelperAttribute();
#line 100 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                                                 WriteLiteral(item.Id);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["TaskId"] = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-route-TaskId", __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.RouteValues["TaskId"], global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4475, 90, true);
            WriteLiteral("\r\n\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n");
            EndContext();
#line 106 "C:\Users\cheekati\Downloads\ToDoList2\ToDoList2\Views\Home\Index.cshtml"
                            }

#line default
#line hidden
            BeginContext(4596, 7613, true);
            WriteLiteral(@"
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .customDiv {
        margin: 1px;
        min-height: 300px;
        background-color: honeydew;
        text-align: center;
        font-size: large
    }
</style>

    <script type=""text/javascript"">
       
    //    let titleContent = document.getElementsByName(""spnTitle"").value();
        let allowedEl = document.querySelector('.allowed');
        let blockedEl = document.querySelector('.blocked');
        function handleDenied() {
            // clipboard-write - granted by default
            if (navigator.clipboard.readText) {
            navigator.permissions.query({ name: 'clipboard-read' })
                .then(function (result) {
                    if (result.state == 'denied') {
                        allowedEl.classList.add('d-none');
                        blockedEl.classList.remove('d-none');
                 ");
            WriteLiteral(@"   }
                    result.onchange = function () {
                        if (result.state == 'denied') {
                            allowedEl.classList.add('d-none');
                            blockedEl.classList.remove('d-none');
                        } else {
                            blockedEl.classList.add('d-none');
                            allowedEl.classList.remove('d-none');
                        }
                    }
                })
                .catch((err) => { console.error(err); });
            } else {
            console.error('Clipboard readText function not found.');
                allowedEl.classList.add('d-none');
                document.querySelector('.not-supported').classList.remove('d-none');
            }
        }


        function copytoclipboard(e, title, id) {
         
            let copyInputButton = document.getElementById(id);
            //document.querySelector('#btnCopyId')

            // new BSN.Tooltip(copyInputButt");
            WriteLiteral(@"on, {placement: 'top', animation: 'fade', delay: 100 });
          
            e.preventDefault();
            let txt = title;

                navigator.clipboard.writeText(txt)
                    .then(() => {
                        copyInputButton.dataset.title = 'Copied to clipboard.';
                        //  new BSN.Tooltip(copyInputButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
                    })
                    .catch((err) => {
                        console.error(err);
                        copyInputButton.dataset.title = 'Permission denied.';
                        // new BSN.Tooltip(copyInputButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
                    });
        }
        //document.addEventListener('DOMContentLoaded', function () {

        //    let moreButton = document.querySelector('.btn-more');
        //    moreButton.addEventListener('click', function (e) {
        //    e.preventDefault();
        // ");
            WriteLiteral(@"       if (document.querySelector('.more-div').classList.toggle('d-none'))
        //            moreButton.innerText = 'More';
        //        else
        //            moreButton.innerText = 'Hide';
        //    });

            //chrome://settings/content/clipboard
            if (navigator.clipboard) {
            handleDenied();
            } else {
            showMessageModal('This client does not support navigator.clipboard.', 'alert-danger');
            }

        //let copyInputButton = document.querySelector('.btn-copy-input');
        //    //document.querySelector('#btnCopyId')
           
        //   // new BSN.Tooltip(copyInputButton, {placement: 'top', animation: 'fade', delay: 100 });
        //    copyInputButton.addEventListener('click', async function (e) { 
        //        
        //    e.preventDefault();
        //        let txt = e.currentTarget.nextElementSibling.innerText;
             
        //        navigator.clipboard.writeText(txt)
        //  ");
            WriteLiteral(@"          .then(() => {
        //    copyInputButton.dataset.title = 'Copied to clipboard.';
        //              //  new BSN.Tooltip(copyInputButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
        //            })
        //            .catch((err) => {
        //    console.error(err);
        //                copyInputButton.dataset.title = 'Permission denied.';
        //               // new BSN.Tooltip(copyInputButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
        //            });

        //    });
        //    copyInputButton.addEventListener('hidden.bs.tooltip', function (e) {
        //    copyInputButton.dataset.title = 'Copy';
        //    });

        ////    let pasteButton = document.querySelector('.btn-paste');
        ////    new BSN.Tooltip(pasteButton, {placement: 'top', animation: 'fade', delay: 100 });
        ////    let pasteInput = document.querySelector('.txt-paste');
        ////    pasteButton.addEventListener('cli");
            WriteLiteral(@"ck', async function (e) {
        ////    e.preventDefault();
        ////        navigator.clipboard.readText()
        ////            .then(txt => {
        ////    pasteButton.dataset.title = 'Pasted from clipboard.';
        ////                new BSN.Tooltip(pasteButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
        ////                if (txt == '') txt = '<EMPTY>';
        ////pasteInput.value = txt;
        ////})
        ////            .catch((err) => {
        ////        pasteButton.dataset.title = 'Permission denied.';
        ////                new BSN.Tooltip(pasteButton, {placement: 'top', animation: 'fade', delay: 100 }).show();
        ////                console.error(err);
        ////                pasteInput.value = '<BLOCKED>';
        ////    });
        ////    });
        ////    pasteButton.addEventListener('hidden.bs.tooltip', function () {
        ////            pasteButton.dataset.title = 'Paste';
        ////        pasteButton.blur()");
            WriteLiteral(@";
        //    });

            let i;
            let copyButtons = document.querySelectorAll('.btn-copy');
            let copyButtonCount = copyButtons.length;
            //for (i = 0; i < copyButtonCount; {
            //    //    new BSN.Tooltip(copyButtons[i], { placement: 'top', animation: 'fade', delay: 100 });
            //    copyButtons[i].addEventListener('click', async function (e) {
            //        e.preventDefault();
            //        let currentEl = e.currentTarget;
            //        let txt = e.currentTarget.lastElementChild.innerText;
            //        navigator.clipboard.writeText(txt)
            //            .then(() => {
            //        currentEl.dataset.title = 'Copied to clipboard.';
            //              //  new BSN.Tooltip(currentEl, {placement: 'top', animation: 'fade', delay: 100 }).show();
            //            })
            //            .catch((err) => {
            //        console.error(err);
            //            ");
            WriteLiteral(@"    currentEl.dataset.title = 'Permission denied.';
            //              //  new BSN.Tooltip(currentEl, {placement: 'top', animation: 'fade', delay: 100 }).show();
            //            });
            //    });

                //copyButtons[i].addEventListener('hidden.bs.tooltip', function (e) {
                //    e.currentTarget.dataset.title = 'Copy';
                //});
           // }
       // });
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TodoList1.ViewModels.HomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
